version: '3.8'
services:
  nginx:
    image: nginx:latest
    container_name: nginx_docker_2
    ports:
      - "8000:80"
      # - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - .:/var/www/laravel_10_study_2:delegated
      # - certbot-etc:/etc/letsencrypt
      # - certbot-var:/var/lib/letsencrypt
    networks:
      - laravel_10_study_2
    restart: always
  laravel_10_study_2:
    container_name: laravel_10_study_2_docker_2
    build:
      context: . 
      dockerfile: Dockerfile
    ports:
      - "8900:9000"  
    volumes:
      - .:/var/www/laravel_10_study_2:delegated
      - ./php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./storage:/var/www/laravel_10_study_2/storage:delegated
      - ./bootstrap/cache:/var/www/laravel_10_study_2/bootstrap/cache:delegated
    depends_on:
      - mariadb
      - redis
    networks:
      - laravel_10_study_2
    restart: always
  mariadb:
    image: 'mariadb:11.5.2'
    container_name: mariadb_docker_2
    command: --max_allowed_packet=2048M
    ports:
      - '3309:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - 'mariadb:/var/lib/mysql'
      - ./mariadb/init:/docker-entrypoint-initdb.d
    networks:
      - laravel_10_study_2
    restart: always
  redis:
    image: redis:alpine
    container_name: laravel_redis_docker_2
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel_10_study_2
  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: swagger_ui_docker_2
    ports:
      - "8082:8080"
    environment:
      - SWAGGER_JSON=/api-docs/swagger.json
    volumes:
      - ./storage/api-docs:/api-docs
    networks:
      - laravel_10_study_2
    depends_on:
      - laravel_10_study_2
    restart: always
networks:
  laravel_10_study_2:
    driver: bridge
volumes:
  mariadb:
    driver: local
  # certbot-etc:
  # certbot-var:
